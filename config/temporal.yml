apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-mysql-es.yml -o k8s/temporal-mysql-es.yaml
    kompose.version: 1.26.1 (1b040dd2)
    kompose.volume.type: configMap
  creationTimestamp: "2023-04-19T17:58:41Z"
  generateName: temporal-5bbd9644f6-
  labels:
    io.kompose.network/temporal-network: "true"
    io.kompose.service: temporal
    pod-template-hash: 5bbd9644f6
  name: temporal-5bbd9644f6-484nt
  namespace: temporal
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: temporal-5bbd9644f6
      uid: 45a150aa-e2fd-492a-9ed1-1043c1c9ec19
  resourceVersion: "1568"
  uid: 8fd06bb1-8b49-4353-936b-78d914af1c01
spec:
  containers:
    - env:
        - name: DB
          value: mysql
        - name: DYNAMIC_CONFIG_FILE_PATH
          value: config/dynamicconfig/development-sql.yaml
        - name: ENABLE_ES
          value: "true"
        - name: ES_SEEDS
          value: elasticsearch
        - name: ES_VERSION
          value: v7
        - name: MYSQL_PWD
          value: root
        - name: MYSQL_SEEDS
          value: mysql
        - name: MYSQL_USER
          value: root
      image: temporalio/auto-setup:1.17.1
      imagePullPolicy: IfNotPresent
      name: temporal
      ports:
        - containerPort: 7233
          protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/temporal/config/dynamicconfig
          name: temporal-cm0
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-ldkh8
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  nodeName: kind-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - configMap:
        defaultMode: 420
        name: temporal-cm0
      name: temporal-cm0
    - name: kube-api-access-ldkh8
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-04-19T17:58:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-04-19T18:00:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-04-19T18:00:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-04-19T17:58:41Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://dc14f4cc9523f22fdd736673d8ef293f660820d44646a928c53a737e0087aa3d
      image: docker.io/temporalio/auto-setup:1.17.1
      imageID: docker.io/temporalio/auto-setup@sha256:29e7e6fdd0f7f38965498fc856419fbc80f7902fde003b08c60ea6a1b7e4b9b4
      lastState: {}
      name: temporal
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-04-19T18:00:58Z"
  hostIP: 172.20.0.2
  phase: Running
  podIP: 10.244.0.7
  podIPs:
    - ip: 10.244.0.7
  qosClass: BestEffort
  startTime: "2023-04-19T17:58:41Z"
